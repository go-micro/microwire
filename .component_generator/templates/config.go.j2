// Code generated with jinja2 templates. DO NOT EDIT.

package {{Name}}

type Config struct {
	Enabled   bool     `json:"enabled" yaml:"Enabled"`
	Plugin    string   `json:"plugin,omitempty" yaml:"Plugin,omitempty"`
	{{config_store_go.Config.Fields}}
}

type sourceConfig struct {
	{{CapsName}} Config `json:"{{name}}" yaml:"{{CapsName}}"`
}

func NewConfig() *Config {
	return &Config{
		Enabled:   {{config_store_go.NewConfig.Enabled}},
		Plugin:    "{{config_store_go.NewConfig.Plugin}}",
		{{config_store_go.NewConfig.Fields}}
	}
}

func (d *Config) Merge(src *Config) error {
	def := NewConfig()

	if src.Enabled != def.Enabled {
		d.Enabled = src.Enabled
	}

	if src.Plugin != def.Plugin {
		d.Plugin = src.Plugin
		{{config_store_go.ConfigMerge.Fields}}
	}

	return nil
}
