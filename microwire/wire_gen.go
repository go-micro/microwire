// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package microwire

import (
	"github.com/go-micro/microwire/broker"
	"github.com/urfave/cli/v2"
	"go-micro.dev/v4"
)

// Injectors from wire.go:

func DefaultApp(opts ...Option) (*cli.App, error) {
	initializeServiceFunc := ProvideDefaultServiceInitializer()
	options := ProvideOptions(opts, initializeServiceFunc)
	brokerFlags := ProvideBrokerFlags(options)
	internalFlags := ProvideDefaultFlags(options, brokerFlags)
	app := ProvideApp(options, internalFlags)
	return app, nil
}

func DefaultService(ctx *cli.Context, opts *Options) (micro.Service, error) {
	brokerOptions := ProvideBrokerOptions(opts, ctx)
	brokerBroker, err := broker.ProvideBroker(brokerOptions)
	if err != nil {
		return nil, err
	}
	v := ProvideDefaultMicroOpts(opts, brokerBroker)
	service := ProvideMicroService(opts, ctx, v)
	return service, nil
}
